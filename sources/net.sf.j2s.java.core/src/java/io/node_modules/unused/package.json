{
  "name": "unused",
  "description": "A module which reports unused variables in your code.",
  "version": "0.2.0",
  "author": {
    "name": "Tomaz Muraus",
    "email": "tomaz+npm@tomaz.me"
  },
  "keywords": [
    "unused",
    "variables",
    "imports",
    "unused variables",
    "unused imports"
  ],
  "homepage": "https://github.com/Kami/node-unused",
  "repository": {
    "type": "git",
    "url": "git://github.com/Kami/node-unused.git"
  },
  "dependencies": {
    "optimist": "0.3.5",
    "esprima": "1.0.0"
  },
  "devDependencies": {
    "mocha": "1.6.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "main": "./index.js",
  "bin": {
    "unused": "./bin/unused"
  },
  "readme": "# unused [![Build Status](https://secure.travis-ci.org/Kami/node-unused.png?branch=master)](https://travis-ci.org/Kami/node-unused)\n\nIdentify unused variables in your javascript code.\n\n## cli\n\n```shell\n$ unused /path/to/file.js\n```\n\n### --ignore-params\n\nComma separated list of function parameters to ignore during unused checks. You often want to know when you forgot to handle `err` or other parameters, but sometimes you have placeholders (`req`, `res`, etc) which you might want to ignore\n\n```shell\n$ unused /path/to/file.js --ignore-params req,res,_\n```\n\n## api\n\n### unused(src)\n\n> src is a javascript source string\n\nReturns an array of objects specifying the name, location, and if the variable is a function parameter\n\n```\n{\n    name: 'foo',\n    loc: {\n        line: 1,\n        column: 1,\n    },\n    param: true || false\n}\n```\n\n## install\n\n```shell\nnpm install unused\n```\n",
  "readmeFilename": "README.md",
  "_id": "unused@0.2.0",
  "dist": {
    "shasum": "02a198d3e176faf1f23dc70f9dcdf9a12bb57144"
  },
  "_from": "unused"
}
